// Place your key bindings in this file to override the defaultsauto[]
// Comments based on keyboard with german (no dead keys) layout
[
    // ==============================
    // ctrl + shift + a -> git stage
    // ==============================
    {
        "key": "ctrl+shift+a",
        "command": "git.stage"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-workbench.action.showCommands"
    },
    // ==============================
    // ctrl + รถ -> new terminal
    // ==============================
    {
        "key": "ctrl+[Semicolon]",
        "command": "workbench.action.terminal.new"
    },
    // ==============================
    // ctrl + shift + รถ -> split terminal
    // ==============================
    {
        "key": "ctrl+shift+[Semicolon]",
        "command": "workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+5",
        "command": "-workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported"
    },
    // ==============================
    // ctrl + alt + รถ -> focus terminal
    // ==============================
    {
        "key": "ctrl+alt+[Semicolon]",
        "command": "workbench.action.terminal.focus",
        "when": "terminalHasBeenCreated && !terminalFocus || terminalProcessSupported && !terminalFocus"
    },
    {
        "key": "alt+f12",
        "command": "-workbench.action.terminal.focus",
        "when": "terminalHasBeenCreated && !terminalFocus || terminalProcessSupported && !terminalFocus"
    },
        // ==============================
    // alt + arrow up -> terminal group up
    // ==============================
    {
        "key": "alt+up",
        "command": "-workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+up",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    // ==============================
    // alt + arrow down -> terminal group down
    // ==============================
    {
        "key": "alt+down",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+down",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    // ==============================
    // alt + arrow left -> inside terminal group go left
    // ==============================
    {
        "key": "alt+left",
        "command": "-workbench.action.terminal.focusPrevious",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+left",
        "command": "workbench.action.previousEditor",
        "when": "!terminalFocus"
    },
    {
        "key": "alt+left",
        "command": "-workbench.action.previousEditor"
    },
    // ==============================
    // alt + arrow right -> inside terminal group go right
    // ==============================
    {
        "key": "alt+right",
        "command": "-workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+right",
        "command": "workbench.action.nextEditor",
        "when": "!terminalFocus"
    },
    {
        "key": "alt+right",
        "command": "-workbench.action.nextEditor"
    },
    // ==============================
    // ctrl + n -> default to advancedNewFile
    // ==============================
    {
        "key": "ctrl+n",
        "command": "extension.advancedNewFile"
    },
    {
        "key": "ctrl+alt+n",
        "command": "-extension.advancedNewFile"
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    // ==============================
    // rename with F2
    // ==============================
    {
        "key": "f2",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+f6",
        "command": "-editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "f2",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus"
    },
    {
        "key": "shift+f6",
        "command": "-renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus"
    },
    {
        "key": "f2",
        "command": "editor.action.changeAll",
        "when": "editorTextFocus && !editorHasRenameProvider && !editorReadonly"
    },
    {
        "key": "shift+f6",
        "command": "-editor.action.changeAll",
        "when": "editorTextFocus && !editorHasRenameProvider && !editorReadonly"
    },
    // ==============================
    // remove IntelliJ keymap bindings
    // ==============================
    {
        "key": "ctrl+w",
        "command": "-editor.action.smartSelect.grow",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+t",
        "command": "-git.sync"
    },
    {
        "key": "ctrl+shift+c",
        "command": "-copyFilePath",
        "when": "!editorFocus"
    },
    {
        "key": "shift shift",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "shift shift",
        "command": "-workbench.action.quickOpen"
    },
    // ==============================
    // remove rst key bindings
    // ==============================
    {
        "key": "enter",
        "command": "-restructuredtext.editor.listEditing.onEnterKey",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'restructuredtext' && vim.mode != 'CommandlineInProgress' && vim.mode != 'EasyMotionInputMode' && vim.mode != 'EasyMotionMode' && vim.mode != 'Normal' && vim.mode != 'Replace' && vim.mode != 'SearchInProgressMode' && vim.mode != 'SurroundInputMode' && vim.mode != 'Visual' && vim.mode != 'VisualBlock' && vim.mode != 'VisualLine'"
    },
    {
        "key": "alt+down",
        "command": "-restructuredtext.editor.listEditing.onMoveLineDown",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'restructuredtext'"
    },
    {
        "key": "alt+up",
        "command": "-restructuredtext.editor.listEditing.onMoveLineUp",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'restructuredtext'"
    },
    {
        "key": "backspace",
        "command": "-restructuredtext.editor.listEditing.onBackspaceKey",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'restructuredtext' && vim.mode != 'CommandlineInProgress' && vim.mode != 'EasyMotionInputMode' && vim.mode != 'EasyMotionMode' && vim.mode != 'Normal' && vim.mode != 'Replace' && vim.mode != 'SearchInProgressMode' && vim.mode != 'SurroundInputMode' && vim.mode != 'Visual' && vim.mode != 'VisualBlock' && vim.mode != 'VisualLine'"
    },
    {
        "key": "ctrl+enter",
        "command": "-restructuredtext.editor.listEditing.onCtrlEnterKey",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'restructuredtext'"
    },
    {
        "key": "shift+enter",
        "command": "-restructuredtext.editor.listEditing.onShiftEnterKey",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'restructuredtext'"
    },
    {
        "key": "shift+tab",
        "command": "-restructuredtext.editor.listEditing.onShiftTabKey",
        "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && !hasOtherSuggestions && !hasSnippetCompletions && !inSnippetMode && !suggestWidgetVisible && editorLangId == 'restructuredtext'"
    },
    {
        "key": "tab",
        "command": "-restructuredtext.editor.listEditing.onTabKey",
        "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && !hasOtherSuggestions && !hasSnippetCompletions && !inSnippetMode && !suggestWidgetVisible && editorLangId == 'restructuredtext'"
    },
    // ==============================
    // remove default key bindings
    // ==============================
    {
        "key": "ctrl+pageup",
        "command": "-workbench.action.terminal.focusPrevious",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "ctrl+pagedown",
        "command": "-workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "ctrl+shift+c",
        "command": "-workbench.action.terminal.openNativeConsole",
        "when": "!terminalFocus"
    }
]
